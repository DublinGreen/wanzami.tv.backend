#enum Role {
#    NORMAL
#    ADMIN
#}

type User {
	id: ID!
	status: ID!
	role: String!
	username: String!
	email: String!
	telephone: String!
	password: String
}

type AuthPayload {
    token: String!
    user: User!
}

type Query {
	findAllUsers: [User]!
	countUsers: Int!
	userById(id:ID!):User 
}

type Mutation {
	createUser(username: String!, email: String!, password: String!, telephone: String!): User!
	softDeleteUserById(id: Int!): User!
	setActiveUserById(id: Int!): User!
	#login(email: String!, password: String!): AuthPayload!	
}

